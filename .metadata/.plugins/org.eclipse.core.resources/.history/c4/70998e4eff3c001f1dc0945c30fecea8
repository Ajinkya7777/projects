package Array;

import java.util.Scanner;

/* 
 * 1. sort the array return the n-2th element check condition it should not be equal with largest
 * 2. find the largest first and compare with array if it's not equal to largest then update the second largest find first largest
 * 3. within one for loop take one pointer at 1 and second pointer at 2 and traverse it
 */

public class SecondLargest {

public static void main(String[] args) {
	int largest=Integer.MIN_VALUE;
	int secondLargest=Integer.MIN_VALUE;
	 Scanner scanner = new Scanner(System.in);
	  System.out.println("enter the size of an array");
	  int size = scanner.nextInt();
	  
	  int[] array = new int[size];
	  
	  System.out.println("enter the array elements" );
	  for(int i=0;i<array.length;i++) {
		  array[i]=scanner.nextInt();
	  }
	  
	  for(int i=0;i<array.length;i++)
	  {
		  if(array[i]>largest)
		  {
			  secondLargest=largest;
			  largest=array[i];
		  }
		  
		  if((array[i]>secondLargest) && (secondLargest<largest) )
		  {
			  secondLargest=array[i];
		  }
	  }
	  
	  
	  
	  scanner.close();
}
}
